on:
  workflow_dispatch:

name: Release

env:
  RUST_TOOLCHAIN: nightly-2024-10-19
  RUST_PROJECT_HOME: core/src/main/rust/demo

jobs:
  build-macos-dylib:
    runs-on: macos-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
      - uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          targets: aarch64-apple-darwin
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
      - name: Cargo build
        run: |
          cd ${{ env.RUST_PROJECT_HOME }}
          cargo build --release --target aarch64-apple-darwin
      - uses: actions/upload-artifact@v3
        with:
          name: libdemo-macos-aarch64
          path: core/target/demo/aarch64-apple-darwin/release/libdemo.dylib
          retention-days: 1

  build-sdk-jar:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: x64
          - os: ubuntu-2204-32-cores-arm
            arch: aarch64
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
      - uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: "17"
          distribution: "zulu"
          architecture: ${{ matrix.arch }}
          cache: maven
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots package
      - uses: actions/upload-artifact@v3
        with:
          name: demo-jar-linux-${{ matrix.arch }}
          path: core/target/demo-git-*.jar
          retention-days: 1

  assemble:
    needs: [build-macos-dylib, build-sdk-jar]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
      - run: echo "sha_short=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_ENV"
      - name: Download artifacts
        uses: actions/download-artifact@v3
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: "17"
          distribution: "zulu"
          architecture: x64
          cache: maven
      - name: Extract Linux aarch64 lib
        run: |
          mkdir linux-aarch64
          cd ./demo-jar-linux-aarch64
          jar xf demo-git-${{ env.sha_short }}.jar
          mv ./io/greptime/demo/rust/libs/linux-aarch64/libdemo.so ../linux-aarch64
      - name: Extract Darwin aarch64 lib
        run: |
          mkdir darwin-aarch64
          mv ./libdemo-macos-aarch64/libdemo.dylib ./darwin-aarch64
      - name: Assemble multi-platform JAR
        run: |
          tree
          cd demo-jar-linux-x64
          jar xf demo-git-${{ env.sha_short }}.jar
          rm -rf demo-git-${{ env.sha_short }}.jar
          mv ../linux-aarch64 ./io/greptime/demo/rust/libs
          mv ../darwin-aarch64 ./io/greptime/demo/rust/libs
          cd ..
          jar cf rust-java-demo-${{ env.sha_short }}-multi-platform.jar -C demo-jar-linux-x64 .
      - name: Deploy to Github Maven repo
        run: |
          mvn deploy:deploy-file -Durl=https://maven.pkg.github.com/GreptimeTeam/rust-java-demo \
                                 -DrepositoryId=github \
                                 -Dfile=rust-java-demo-${{ env.sha_short }}-multi-platform.jar \
                                 -DpomFile=pom.xml \
                                 -DgroupId=io.greptime \
                                 -DartifactId=rust-java-demo \
                                 -Dversion=0.1.0 \
                                 -Dpackaging=jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/upload-artifact@v3
        with:
          name: rust-java-demo-${{ env.sha_short }}-multi-platform.jar
          path: rust-java-demo-${{ env.sha_short }}-multi-platform.jar
          retention-days: 7
